[project]
name = "deltav"
version = "0.0.1-dev"
license = { file = "LICENSE" }
description = "A typed python client for the SpaceTraders.io game API"
readme = "readme.md"
requires-python = ">=3.13"
dependencies = [
    "deepmerge>=2.0",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "pydantic>=2.11.5",
    "pyjwt[crypto]>=2.10.1",
    "sqlalchemy>=2.0.41",
    "textual[syntax]>=3.2.0",
    "tomlkit>=0.13.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "textual-dev>=1.7.0",
]
lint = [
    "ruff>=0.11.12",
]

[project.scripts]
cli = "deltav.__main__:main"

[project.gui-scripts]
tui = "deltav.vantage.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
default-groups = ["dev", "lint"]
package = true

[tool.basedpyright]
reportExplicitAny = false

[tool.ruff]
line-length = 100
show-fixes = true

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80
line-ending = "lf"
quote-style = "single"
skip-magic-trailing-comma = true

[tool.ruff.lint]
extend-select = [
    "A",    # flake8 builtins
    "B",    # flake8 bugbear
    "I",    # isort
    "Q",    # flake8 quotes
    "S",    # flake8 bandit
    "BLE",  # flake8 blind except
    "C4",   # flake8 comprehensions
    "COM",  # flake8 commas
    "DTZ",  # flake8 datetimez
    "EM",   # flake8 errmsg
    "ERA",  # flake8 eradicate
    "FBT",  # flake8 boolean trap
    "PIE",  # flake8 pie (misc)
    "RET",  # flake8 return
    "SLF",  # flake8 self
    "T20",  # flake8 print
    "TC",   # flake8 type checking
]
ignore = [
    "COM812",  # Missing trailing comma
    "S101"     # Use of assert detected
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.pytest-watcher]
runner = "textual"
runner_args = [ "run", "--dev", "deltav.vantage.__main__"]

